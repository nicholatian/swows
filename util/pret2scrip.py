#!/usr/bin/env python3
# -*- coding: utf-8 -*-
## PretScript to PokéScrip converter
##
## This program converts Pret assembler-based (.inc) script (hereafter known as
## PretScript) files to the low-level PokéScrip (.scrip) file format. It takes
## for input, an inc fragment produced by uninc containing the relevant script
## code, or a user-created PretScript file, and outputs a ready-to-assemble
## PokéScrip file that can be fed to scrip2o for compilation.
##
## This was developed by Alexander Nicholi for use in the Pokémon SwowS fanhack
## made with pokeemerald, a public endeavour. Although there is no licensing
## basis for the game itself, everything under legal copyright here is released
## under the BSD-2-clause licence. I hope you find good use in what I made.

HELP_TEXT = r'PretScript to PokéScrip converter
Copyright © 2019 Alexander Nicholi. Released under BSD-2-clause

Usage:-

    pret2scrip.py <input> [output]

    Takes <input>, a PretScript source file, and converts it into equivalent
    PokéScrip, sent to [output] file (or stdout if omitted). If <input> is ‘-’
    then stdin is read for input.
'

## LEXING:
## line-based, rstrip + lstrip, space/comma separation. the usual. gas was
## never too complicated. send this to the parser, ez pz.
## PARSING:
## idea here is simple enough. a functional approach from the top, create an
## array of tuples, one member for each macro in ‘/asm/macros/event.h’, pairing
## them with a method that handles conversion. most macros are simple, but ones
## more involved than taking required parameters and serialising them into
## words and bytes can be specialised (for example ‘trainerbattle’).
## GENERATING:
## should follow the command names and styles as specified in scrip2o, which
## are explicit, consistent, unambiguous, and nice to mnemonics. like snips.

COMMANDS = [
	('nop', 0x00, []),
	('nop1', 0x01, []),
	('end', 0x02, []),
	('return', 0x03, []),
	('call', 0x04, [(4, True)]),
	('goto', 0x05, [(4, True)]),
	('goto_if', 0x06, [(1, True), (4, True)]),
	('call_if', 0x07, [(1, True), (4, True)]),
	('gotostd', 0x08, [(1, True)]),
	('callstd', 0x09, [(1, True)]),
	('gotostd_if', 0x0A, [(1, True), (1, True)]),
	('callstd_if', 0x0B, [(1, True), (1, True)]),
	('returnram', 0x0C, []),
	('killscript', 0x0D, []),
	('setmysteryeventstatus', 0x0E, [(1, True)]),
	('loadword', 0x0F, [(1, True), (4, True)]),
	('loadbyte', 0x10, [(1, True), (1, True)]),
	('writebytetoaddr', 0x11, [(1, True), (4, True)]),
	('loadbytefromaddr', 0x12, [(1, True), (4, True)]),
	('setptrbyte', 0x13, [(1, True), (4, True)]),
	('copylocal', 0x14, [(1, True), (1, True)]),
	('copybyte', 0x15, [(4, True), (4, True)]),
	('setvar', 0x16, [(2, True), (2, True)]),
	('addvar', 0x17, [(2, True), (2, True)]),
	('subvar', 0x18, [(2, True), (2, True)]),
	('copyvar', 0x19, [(2, True), (2, True)]),
	('setorcopyvar', 0x1A, [(2, True), (2, True)]), # copyvarifnotzero
	('compare_local_to_local', 0x1B, [(1, True), (1, True)]),
	('compare_local_to_value', 0x1C, [(1, True), (1, True)]),
	('compare_local_to_addr', 0x1D, [(1, True), (4, True)]),
	('compare_addr_to_local', 0x1E, [(4, True), (1, True)]),
	('compare_addr_to_value', 0x1F, [(4, True), (1, True)]),
	('compare_addr_to_addr', 0x20, [(4, True), (4, True)]),
	('compare_var_to_value', 0x21, [(2, True), (2, True)]),
	('compare_var_to_var', 0x22, [(2, True), (2, True)]),
	('callnative', 0x23, [(4, True)]),
	('gotonative', 0x24, [(4, True)]),
	('special', 0x25, [(2, True)]),
	('specialvar', 0x26, [(2, True), (2, True)]),
	('waitstate', 0x27, []),
	('pause', 0x28, [(2, True)]),
	('setflag', 0x29, [(2, True)]),
	('clearflag', 0x2A, [(2, True)]),
	('checkflag', 0x2B, [(2, True)]),
	('initclock', 0x2C, [(2, True), (2, True)]),
	('dotimebasedevents', 0x2D, []),
	('gettime', 0x2E, []),
	('playse', 0x2F, [(2, True)]),
	('waitse', 0x30, []),
	('playfanfare', 0x31, [(2, True)]),
	('waitfanfare', 0x32, []),
	('playbgm', 0x33, [(2, True), (1, True)]),
	('savebgm', 0x34, [(2, True)]),
	('fadedefaultbgm', 0x35, []),
	('fadenewbgm', 0x36, [(2, True)]),
	('fadeoutbgm', 0x37, [(1, True)]),
	('fadeinbgm', 0x38, [(1, True)]),
	('warp', 0x39, [(2, True), (1, True), (2, True), (2, True)]),
	('warpsilent', 0x3A, [(2, True), (1, True), (2, True), (2, True)]),
	('warpdoor', 0x3B, [(2, True), (1, True), (2, True), (2, True)]),
	('warphole', 0x3C, [(2, True)]),
	('warpteleport', 0x3D, [(2, True), (1, True), (2, True), (2, True)]),
	('setwarp', 0x3E, [(2, True), (1, True), (2, True), (2, True)]),
	('setdynamicwarp', 0x3F, [(2, True), (1, True), (2, True), (2, True)]),
	('setdivewarp', 0x40, [(2, True), (1, True), (2, True), (2, True)]),
	('setholewarp', 0x41, [(2, True), (1, True), (2, True), (2, True)]),
	('getplayerxy', 0x42, [(2, True), (2, True)]),
	('getpartysize', 0x43, []),
	('giveitem', 0x44, [(2, True), (2, True)]),
	('takeitem', 0x45, [(2, True), (2, True)]),
	('checkitemspace', 0x46, [(2, True), (2, True)]),
	('checkitem', 0x47, [(2, True), (2, True)]),
	('checkitemtype', 0x48, [(2, True)]),
	('givepcitem', 0x49, [(2, True), (2, True)]),
	('checkpcitem', 0x4A, [(2, True), (2, True)]),
	('givedecoration', 0x4B, [(2, True)]),
	('takedecoration', 0x4C, [(2, True)]),
	('checkdecoration', 0x4D, [(2, True)]),
	('checkdecorspace', 0x4E, [(2, True)]),
	('applymovement', 0x4F, [(2, True), (4, True), (2, False)]),
	('applymovementmap', 0x50, [(2, True), (4, True), (2, True)]),
	('waitmovement', 0x51, [(2, True)]),
	('waitmovementmap', 0x52, [(2, True), (2, True)]),
	('removeobject', 0x53, [(2, True)]),
	('removeobjectmap', 0x54, [(2, True), (2, True)]),
	('addobject', 0x55, [(2, True)]),
	('addobjectmap', 0x56, [(2, True), (2, True)]),
	('setobjectxy', 0x57, [(2, True), (2, True), (2, True)]),
	('showobjectat', 0x58, [(2, True), (2, True)]),
	('hideobjectat', 0x59, [(2, True), (2, True)]),
	('faceplayer', 0x5A, []),
	('turnobject', 0x5B, [(2, True), (1, True)]),
	('trainerbattle', 0x5C, [
		(1, True), (2, True), (2, True), (4, True),
		(4, False), (4, False), (4, False)
	]),
	('trainerbattlebegin', 0x5D, []),
	('gotopostbattlescript', 0x5E, []),
	('gotobeatenscript', 0x5F, []),
	('checktrainerflag', 0x60, [(2, True)]),
	('settrainerflag', 0x61, [(2, True)]),
	('cleartrainerflag', 0x62, [(2, True)]),
	('setobjectxyperm', 0x63, [(2, True), (2, True), (2, True)]),
	('moveobjectoffscreen', 0x64, [(2, True)]),
	('setobjectmovementtype', 0x65, [(2, True), (1, True)]),
	('waitmessage', 0x66, []),
	('message', 0x67, [(4, True)]),
	('closemessage', 0x68, []),
	('lockall', 0x69, []),
	('lock', 0x6A, []),
	('releaseall', 0x6B, []),
	('release', 0x6C, []),
	('waitbutton', 0x6D, []),
	('yesnobox', 0x6E, [(1, True), (1, True)]),
	('multichoice', 0x6F, [(1, True), (1, True), (1, True), (1, True)]),
	('multichoicedefault', 0x70, [(1, True), (1, True), (1, True),
	                              (1, True), (1, True)]),
	('multichoicegrid', 0x71, [(1, True), (1, True), (1, True), (1, True),
	                           (1, True)]),
	('drawbox', 0x72, []),
	('erasebox', 0x73, [(1, True), (1, True), (1, True), (1, True)]),
	('drawboxtext', 0x74, [(1, True), (1, True), (1, True), (1, True)]),
	('drawpokepic', 0x75, [(2, True), (1, True), (1, True)]),
	('erasepokepic', 0x76, []),
	('drawcontestwinner', 0x77, [(1, True)]),
	('braille', 0x78, [(4, True)]),
	('givemon', 0x79, [(2, True), (1, True), (2, True), (4, True),
	                   (4, True), (1, True)]),
	('giveegg', 0x7A, [(2, True)]),
	('setmonmove', 0x7B, [(1, True), (1, True), (2, True)]),
	('checkpartymove', 0x7C, [(2, True)]),
	('bufferspeciesname', 0x7D, [(1, True), (2, True)]),
	('bufferleadmonspeciesname', 0x7E, [(1, True)]),
	('bufferpartymonnick', 0x7F, [(1, True), (2, True)]),
	('bufferitemname', 0x80, [(1, True), (2, True)]),
	('bufferdecorname', 0x81, [(1, True), (2, True)]),
	('buffermovename', 0x82, [(1, True), (2, True)]),
	('buffernumberstring', 0x83, [(1, True), (2, True)]),
	('bufferstdstring', 0x84, [(1, True), (2, True)]),
	('bufferstring', 0x85, [(1, True), (4, True)]),
	('pokemart', 0x86, [(4, True)]),
	('pokemartdecoration', 0x87, [(4, True)]),
	('pokemartdecoration2', 0x88, [(4, True)]),
	('playslotmachine', 0x89, [(2, True)]),
	('setberrytree', 0x8A, [(1, True), (1, True), (1, True)]),
	('choosecontestmon', 0x8B, []),
	('startcontest', 0x8C, []),
	('showcontestresults', 0x8D, []),
	('contestlinktransfer', 0x8E, []),
	('random', 0x8F, [(2, True)]),
	('givemoney', 0x90, [(4, True), (1, True)]),
	('takemoney', 0x91, [(4, True), (1, True)]),
	('checkmoney', 0x92, [(4, True), (1, True)]),
	('showmoneybox', 0x93, [(1, True), (1, True), (1, True)]),
	('hidemoneybox', 0x94, []),
	('updatemoneybox', 0x95, [(1, True), (1, True)]),
	('getpricereduction', 0x96, [(2, True)]),
	('fadescreen', 0x97, [(1, True)]),
	('fadescreenspeed', 0x98, [(1, True), (1, True)]),
	('setflashradius', 0x99, [(2, True)]),
	('animateflash', 0x9A, [(1, True)]),
	('messageautoscroll', 0x9B, [(4, True)]),
	('dofieldeffect', 0x9C, [(2, True)]),
	('setfieldeffectargument', 0x9D, [(1, True), (2, True)]),
	('waitfieldeffect', 0x9E, [(2, True)]),
	('setrespawn', 0x9F, [(2, True)]),
	('checkplayergender', 0xA0, []),
	('playmoncry', 0xA1, [(2, True), (2, True)]),
	('setmetatile', 0xA2, [(2, True), (2, True), (2, True), (2, True)]),
	('resetweather', 0xA3, []),
	('setweather', 0xA4, [(2, True)]),
	('doweather', 0xA5, []),
	('setstepcallback', 0xA6, [(1, True)]),
	('setmaplayoutindex', 0xA7, [(2, True)]),
	('setobjectpriority', 0xA8, [(2, True), (2, True), (1, True)]),
	('resetobjectpriority', 0xA9, [(2, True), (2, True)]),
	('createvobject', 0xAA, [(2, True), (1, True), (2, True), (2, True),
	                         (1, True), (1, True)]),
	('turnvobject', 0xAB, [(1, True), (1, True)]),
	('opendoor', 0xAC, [(2, True), (2, True)]),
	('closedoor', 0xAD, [(2, True), (2, True)]),
	('waitdooranim', 0xAE, []),
	('setdooropen', 0xAF, [(2, True), (2, True)]),
	('setdoorclosed', 0xB0, [(2, True), (2, True)]),
	('addelevmenuitem', 0xB1, [(1, True), (2, True), (2, True),
	                           (2, True)]),
	('showelevmenu', 0xB2, []),
	('checkcoins', 0xB3, [(2, True)]),
	('givecoins', 0xB4, [(2, True)]),
	('takecoins', 0xB5, [(2, True)]),
	('setwildbattle', 0xB6, [(2, True), (1, True), (2, True)]),
	('dowildbattle', 0xB7, []),
	('setvaddress', 0xB8, [(4, True)]),
	('vgoto', 0xB9, [(4, True)]),
	('vcall', 0xBA, [(4, True)]),
	('vgoto_if', 0xBB, [(1, True), (4, True)]),
	('vcall_if', 0xBC, [(1, True), (4, True)]),
	('vmessage', 0xBD, [(4, True)]),
	('vloadptr', 0xBE, [(4, True)]),
	('vbufferstring', 0xBF, [(1, True), (4, True)]),
	('showcoinsbox', 0xC0, [(1, True), (1, True)]),
	('hidecoinsbox', 0xC1, [(1, True), (1, True)]),
	('updatecoinsbox', 0xC2, [(1, True), (1, True)]),
	('incrementgamestat', 0xC3, [(1, True)]),
	('setescapewarp', 0xC4, [(2, True), (1, True), (2, True), (2, True)]),
	('waitmoncry', 0xC5, []),
	('bufferboxname', 0xC6, [(1, True), (2, True)]),
	('textcolor', 0xC7, [(1, True)]),
	('loadhelp', 0xC8, [(4, True)]),
	('unloadhelp', 0xC9, [(], True)),
	('signmsg', 0xCA, []),
	('normalmsg', 0xCB, []),
	('comparehiddenvar', 0xCC, [(1, True), (4, True)]),
	('setmonobedient', 0xCD, [(2, True)]),
	('checkmonobedience', 0xCE, [(2, True)]),
	('jumpram', 0xCF, []),
	('setworldmapflag', 0xD0, [(2, True)]),
tty	('warpteleport2', 0xD1, [(1, True), (2, True), (1, True), (2, True),
	                         (2, True)]),
	('setmonmetlocation', 0xD2, [(2, True), (1, True)]),
	('mossdeepgym1', 0xD3, [(2, True)]),
	('mossdeepgym2', 0xD4, []),
	('mossdeepgym3', 0xD5, [(2, True)]),
	('mossdeepgym4', 0xD6, []),
	('warp7', 0xD7, [(2, True), (1, True), (2, True), (2, True)]),
	('cmdD8', 0xD8, []),
	('cmdD9', 0xD9, []),
	('hidebox2', 0xDA, []),
	('message3', 0xDB, [(4, True)]),
	('fadescreenswapbuffers', 0xDC, [(1, True), (2, True)]),
	('buffertrainerclassname', 0xDD, [(1, True), (2, True)]),
	('buffertrainername', 0xDE, [(1, True), (2, True)]),
	('pokenavcall', 0xDF, [(4, True)]),
	('warp8', 0xE0, [(2, True), (1, True), (2, True), (2, True)]),
	('buffercontesttypestring', 0xE1, [(1, True), (2, True)]),
	('bufferitemnameplural', 0xE2, [(1, True), (2, True), (2, True)])
]

CONSTANTS = [
	('STD_OBTAIN_ITEM', 0x00),
	('STD_FIND_ITEM', 0x01),
	('STD_OBTAIN_DECORATION', 0x07),
	('STD_REGISTER_MATCH_CALL', 0x08),
	('MSGBOX_NPC', 0x02),
	('MSGBOX_SIGN', 0x03),
	('MSGBOX_DEFAULT', 0x04),
	('MSGBOX_YESNO', 0x05),
	('MSGBOX_AUTOCLOSE', 0x06),
	('YES', 0x01),
	('NO', 0x00)
]
